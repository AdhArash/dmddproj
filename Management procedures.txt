to address a complaint - ,management
add/update listing tags -management/seller
to remove premium for customer - management
to change listing status - management

--login for management
create or replace procedure mgm_login(contact VARCHAR, PASSWORD VARCHAR)
AS
FLAG BOOLEAN:= FALSE;
cnt VARCHAR(50);
PWD VARCGHAR2(20);
BEGIN
SELECT COUNT(*) INTO cnt FROM management WHERE CONTACT=contact;
IF(cnt = 0 ) THEN
FLAG:=FALSE;
dbms_output.Put_line('USER WITH GIVEN contact DOESNOT EXIST.PLEASE USE VALID CREDENTIALS ELSE EXECUTE SIGNUP');
ELSE
 SELECT PASSWORD INTO PWD FROM management WHERE CONTACT=contact;
 IF (PASSWORD=PWD) THEN FLAG:=TRUE;
ELSE FLAG:=FALSE;
dbms_output.Put_line('INVALID PASSWORD.PLEASE USE VALID CREDENTIALS');
END IF;
END IF;
IF FLAG THEN 
CONNECT TO 'EMAIL';
END IF;
ENG mgm_LOGIN;
/

CREATE OR REPLACE PACKAGE Management_OPERATIONS
AS 
PROCEDURE Address_complaint(complaint_id NUMBER, solution VARCHAR);
PROCEDURE Update_ListStatus(LISTING_ID NUMBER,status VARCHAR);
END Management_OPERATIONS;
/

CREATE OR REPLACE PACKAGE BODY Management_OPERATIONS
AS
PROCEDURE Address_complaint(complaint_id NUMBER, solution VARCHAR)
AS
UID number;
BEGIN
dbms_output.put_line(USER);
SELECT ID INTO UID FROM management WHERE CONTACT=USER;
dbms_output.put_line(UID);
update concerns set Date_resolved=sysdate, addressed_by=UID, answer= solution where concerns.id=complaint_id;
COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        dbms_output.put_line(SQLERRM);
        rollback;
        raise;
END Address_complaint;

PROCEDURE Update_ListStatus(LISTING_ID NUMBER,status VARCHAR)
AS
UID number;
BEGIN
dbms_output.put_line(USER);
SELECT ID INTO UID FROM management WHERE CONTACT=USER;
dbms_output.put_line(UID);
IF STATUS = 'Y' THEN
    UPDATE LISTING_STATUS SET IS_AVAILABLE='Y', updated_by=UID, date_updated=sysdate WHERE LISTING_ID=LISTING_ID;
ELSE
    UPDATE LISTING_STATUS SET IS_AVAILABLE='N', updated_by=UID, date_updated=sysdate WHERE LISTING_ID=LISTING_ID;
END IF;
--do we need to remove the related records from offer or make offer status inactive?
COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        dbms_output.put_line(SQLERRM);
        rollback;
        raise;
END Update_ListStatus;
END Management_Operations;
/
